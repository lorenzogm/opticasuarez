name: Deploy Preview and E2E Tests

on:
  pull_request:
    branches: [main]

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    name: Deploy to Vercel Preview
    outputs:
      preview-url: ${{ steps.deploy.outputs.preview-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Deploy to Vercel Preview
        id: deploy
        run: |
          url=$(vercel deploy --token=${{ secrets.VERCEL_TOKEN }} --yes)
          echo "preview-url=$url" >> $GITHUB_OUTPUT
          echo "Preview URL: $url"
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_TEAM_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

  e2e-tests:
    runs-on: ubuntu-latest
    name: E2E Tests on Preview
    needs: deploy-preview
    if: needs.deploy-preview.outputs.preview-url != ''
    outputs:
      test-result: ${{ steps.test-run.outputs.test-result }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        id: test-run
        run: |
          if npm run test:e2e; then
            echo "test-result=‚úÖ" >> $GITHUB_OUTPUT
          else
            echo "test-result=‚ùå" >> $GITHUB_OUTPUT
            exit 1
          fi
        env:
          PLAYWRIGHT_BASE_URL: ${{ needs.deploy-preview.outputs.preview-url }}
        continue-on-error: true

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-preview
          path: playwright-report/
          retention-days: 30

  update-pr-description:
    runs-on: ubuntu-latest
    name: Update PR Description
    needs: [deploy-preview, e2e-tests]
    if: always() && needs.deploy-preview.outputs.preview-url != ''

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Update PR description with deployment info
        uses: actions/github-script@v7
        with:
          script: |
            const { context } = require('@actions/github');
            
            // Get current PR description
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });
            
            const currentBody = pr.data.body || '';
            const previewUrl = '${{ needs.deploy-preview.outputs.preview-url }}';
            const testResult = '${{ needs.e2e-tests.outputs.test-result }}' || '‚ùå';
            const prTitle = pr.data.title;
            
            // Create deployment table
            const deploymentTable = `
            ## üöÄ Deployment Status
            
            | Title | Preview Link | E2E Tests |
            |-------|-------------|-----------|
            | ${prTitle} | [Preview Environment](${previewUrl}) | ${testResult} |
            `;
            
            // Check if deployment table already exists and replace it, otherwise append
            let newBody;
            if (currentBody.includes('## üöÄ Deployment Status')) {
              // Replace existing deployment table
              const regex = /## üöÄ Deployment Status[\s\S]*?(?=\n##|\n\n##|$)/;
              newBody = currentBody.replace(regex, deploymentTable.trim());
            } else {
              // Append deployment table at the end
              newBody = currentBody + '\n\n' + deploymentTable.trim();
            }
            
            // Update the PR description
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              body: newBody,
            });
